// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type FetchAction struct {
	ID        *string `json:"id,omitempty"`
	Service   *string `json:"service,omitempty"`
	ServiceID *string `json:"serviceId,omitempty"`
	UserID    *string `json:"userId,omitempty"`
	Type      *int    `json:"type,omitempty"`
	Status    *int    `json:"status,omitempty"`
}

type FetchAddress struct {
	ID     *string `json:"id,omitempty"`
	UserID *string `json:"userId,omitempty"`
	OsmID  *string `json:"osmId,omitempty"`
}

type FetchCategory struct {
	ID     *string `json:"id,omitempty"`
	UserID *string `json:"userId,omitempty"`
	Seo    *string `json:"seo,omitempty"`
	Parent *string `json:"parent,omitempty"`
	Status *int    `json:"status,omitempty"`
}

type FetchImage struct {
	ID        *string `json:"id,omitempty"`
	ServiceID *string `json:"serviceId,omitempty"`
	Service   *string `json:"service,omitempty"`
	UserID    *string `json:"userId,omitempty"`
}

type FetchNodeVote struct {
	ID         *string `json:"id,omitempty"`
	UserID     *string `json:"userId,omitempty"`
	NodeID     *string `json:"nodeId,omitempty"`
	NodeUserID *string `json:"nodeUserId,omitempty"`
}

type FetchOffer struct {
	ID        *string `json:"id,omitempty"`
	UserID    *string `json:"userId,omitempty"`
	ProductID *string `json:"productId,omitempty"`
	Status    *int    `json:"status,omitempty"`
}

type FetchQuestion struct {
	ID        *string `json:"id,omitempty"`
	UserID    *string `json:"userId,omitempty"`
	ProductID *string `json:"productId,omitempty"`
}

type FetchReview struct {
	ID     *string `json:"id,omitempty"`
	UserID *string `json:"userId,omitempty"`
	NodeID *string `json:"nodeId,omitempty"`
}

type FetchSubscribe struct {
	ID        *string `json:"id,omitempty"`
	UserID    *string `json:"userId,omitempty"`
	SubUserID *string `json:"subUserId,omitempty"`
}

type Hello struct {
	Hello string `json:"hello"`
}

type PageInfo struct {
	StartCursor string `json:"startCursor"`
	EndCursor   string `json:"endCursor"`
	HasNextPage *bool  `json:"hasNextPage,omitempty"`
}

type PaginationAction struct {
	Total *int      `json:"total,omitempty"`
	Limit *int      `json:"limit,omitempty"`
	Skip  *int      `json:"skip,omitempty"`
	Data  []*Action `json:"data,omitempty"`
}

type PaginationAddress struct {
	Total *int       `json:"total,omitempty"`
	Limit *int       `json:"limit,omitempty"`
	Skip  *int       `json:"skip,omitempty"`
	Data  []*Address `json:"data,omitempty"`
}

type PaginationCategory struct {
	Total *int        `json:"total,omitempty"`
	Limit *int        `json:"limit,omitempty"`
	Skip  *int        `json:"skip,omitempty"`
	Data  []*Category `json:"data,omitempty"`
}

type PaginationImage struct {
	Total *int     `json:"total,omitempty"`
	Limit *int     `json:"limit,omitempty"`
	Skip  *int     `json:"skip,omitempty"`
	Data  []*Image `json:"data,omitempty"`
}

type PaginationMessage struct {
	Total *int       `json:"total,omitempty"`
	Limit *int       `json:"limit,omitempty"`
	Skip  *int       `json:"skip,omitempty"`
	Data  []*Message `json:"data,omitempty"`
}

type PaginationNodeVote struct {
	Total *int        `json:"total,omitempty"`
	Limit *int        `json:"limit,omitempty"`
	Skip  *int        `json:"skip,omitempty"`
	Data  []*NodeVote `json:"data,omitempty"`
}

type PaginationOffer struct {
	Total *int     `json:"total,omitempty"`
	Limit *int     `json:"limit,omitempty"`
	Skip  *int     `json:"skip,omitempty"`
	Data  []*Offer `json:"data,omitempty"`
}

type PaginationProduct struct {
	Total *int       `json:"total,omitempty"`
	Limit *int       `json:"limit,omitempty"`
	Skip  *int       `json:"skip,omitempty"`
	Data  []*Product `json:"data,omitempty"`
}

type PaginationQuestion struct {
	Total *int        `json:"total,omitempty"`
	Limit *int        `json:"limit,omitempty"`
	Skip  *int        `json:"skip,omitempty"`
	Data  []*Question `json:"data,omitempty"`
}

type PaginationSubscribe struct {
	Total *int         `json:"total,omitempty"`
	Limit *int         `json:"limit,omitempty"`
	Skip  *int         `json:"skip,omitempty"`
	Data  []*Subscribe `json:"data,omitempty"`
}

type PaginationTag struct {
	Total *int   `json:"total,omitempty"`
	Limit *int   `json:"limit,omitempty"`
	Skip  *int   `json:"skip,omitempty"`
	Data  []*Tag `json:"data,omitempty"`
}

type PaginationTicket struct {
	Total *int      `json:"total,omitempty"`
	Limit *int      `json:"limit,omitempty"`
	Skip  *int      `json:"skip,omitempty"`
	Data  []*Ticket `json:"data,omitempty"`
}

type ParamsMessage struct {
	ID     *string `json:"id,omitempty"`
	Status *int    `json:"status,omitempty"`
	UserID *string `json:"userId,omitempty"`
}

type ParamsProduct struct {
	ID         *string       `json:"id,omitempty"`
	Query      *string       `json:"query,omitempty"`
	CategoryID []*string     `json:"categoryId,omitempty"`
	UserID     *string       `json:"userId,omitempty"`
	Cost       *int          `json:"cost,omitempty"`
	Actions    []*int        `json:"actions,omitempty"`
	Sort       []*SortParams `json:"sort,omitempty"`
}

type ParamsTag struct {
	ID          *string `json:"id,omitempty"`
	Key         *string `json:"key,omitempty"`
	Type        *string `json:"type,omitempty"`
	Title       *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
}

type ParamsTicket struct {
	ID     *string `json:"id,omitempty"`
	UserID *string `json:"userId,omitempty"`
}

type Query struct {
}

type ReviewEdge struct {
	Cursor string  `json:"cursor"`
	Node   *Review `json:"node,omitempty"`
}

type ReviewInfo struct {
	Count   *int `json:"count,omitempty"`
	Value   *int `json:"value,omitempty"`
	Ratings any  `json:"ratings,omitempty"`
}

type ReviewsConnection struct {
	Edges    []*ReviewEdge `json:"edges"`
	PageInfo *PageInfo     `json:"pageInfo"`
}

type SortParams struct {
	Key   *string `json:"key,omitempty"`
	Value *int    `json:"value,omitempty"`
}
