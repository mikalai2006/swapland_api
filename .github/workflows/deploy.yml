name: "build and deploy"
on: push
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: Create .ENV
        run: |
          touch .env
          echo HOST_DATA=${{ secrets.HOST_DATA }} >> .env
          echo MONGODB_HOST=${{ secrets.MONGODB_HOST }} >> .env
          echo MONGODB_PORT=${{ secrets.MONGODB_PORT }} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo MONGODB_USER=${{ secrets.MONGODB_USER }} >> .env
          echo MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }} >> .env
          echo VK_CLIENT_ID=${{ secrets.VK_CLIENT_ID }} >> .env
          echo VK_CLIENT_SECRET=${{ secrets.VK_CLIENT_SECRET }} >> .env
          echo GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} >> .env
          echo GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} >> .env
          echo SALT=${{ secrets.SALT }} >> .env
          echo SIGNING_KEY=${{ secrets.SIGNING_KEY }} >> .env
          echo NAME_COOKIE_REFRESH=${{ secrets.NAME_COOKIE_REFRESH }} >> .env
          cat .env

      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v1

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          # password: ${{ secrets.REGISTRY_TOKEN }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: "build & deploy template-app"
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest
          # secrets: |
          #   "MODE=Release"
          # build-args: |
          #   build_mode=Release
  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: build
    steps:
      # - name: copy file .env on server
      #   uses: garygrossgarten/github-action-scp@release
      #   with:
      #     host: ${{ secrets.SSH_SITE_HOST }}
      #     username: ${{ secrets.SSH_SITE_USERNAME }}
      #     password: ${{ secrets.SSH_SITE_PASSWORD }}
      #     port: ${{ secrets.SSH_SITE_PORT }}
      #     local: .env
      #     remote: mikalai2006/.env_
      - name: "Run deploy on server"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_SITE_HOST }}
          username: ${{ secrets.SSH_SITE_USERNAME }}
          # key: ${{ secrets.SSH_SITE_TOKEN }}
          password: ${{ secrets.SSH_SITE_PASSWORD }}
          port: ${{ secrets.SSH_SITE_PORT }}
          script: |
            sudo docker-compose -f docker-compose.yml -p prod pull
            sudo docker-compose -f docker-compose.yml -p prod up -d
