name: swapland-api-test
on: push
jobs:
  test:
    name: Test application
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    # github.ref == 'refs/heads/main' ||
    steps:
      - uses: actions/checkout@v3
      - name: Create .ENV
        run: |
          touch .env
          echo HOST_DATA=${{ secrets.HOST_DATA }} >> .env
          echo MONGODB_HOST=${{ secrets.MONGODB_HOST }} >> .env
          echo MONGODB_PORT=${{ secrets.MONGODB_PORT }} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo MONGODB_USER=${{ secrets.MONGODB_USER }} >> .env
          echo MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }} >> .env
          echo VK_CLIENT_ID=${{ secrets.VK_CLIENT_ID }} >> .env
          echo VK_CLIENT_SECRET=${{ secrets.VK_CLIENT_SECRET }} >> .env
          echo GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} >> .env
          echo GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} >> .env
          echo SALT=${{ secrets.SALT }} >> .env
          echo SIGNING_KEY=${{ secrets.SIGNING_KEY }} >> .env
          echo NAME_COOKIE_REFRESH=${{ secrets.NAME_COOKIE_REFRESH }} >> .env
          cat .env
      - name: Checkout code
        uses: actions/setup-go@v3
        with:
          go-version: "^1.19.1"
      - name: Create test db container
        env:
          MONGODB_HOST: ${{ secrets.MONGODB_HOST }}
          MONGODB_PORT: ${{ secrets.MONGODB_PORT }}
          MONGODB_USER: ${{ secrets.MONGODB_USER }}
          MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
        run: docker run --rm -d -p ${{ env.MONGODB_PORT }}:${{ env.MONGODB_PORT }} -e MONGODB_DATABASE=api_test -e PUID=1000 -e PGID=1000 -e AUTH=yes -e MONGO_INITDB_ROOT_USERNAME=${{ env.MONGODB_USER }} -e MONGO_INITDB_ROOT_PASSWORD=${{ env.MONGODB_PASSWORD }} --name mongodb mongo:latest
      # - name: Build the stack
      #   run: docker-compose up -d
      - name: Run unit tests
        run: go test --short ./...
      - name: Run Integration tests
        run: make tests
  push_to_registry:
    name: Create and push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Create .ENV
        run: |
          touch .env
          echo HOST_DATA=${{ secrets.HOST_DATA }} >> .env
          echo MONGODB_HOST=${{ secrets.MONGODB_HOST }} >> .env
          echo MONGODB_PORT=${{ secrets.MONGODB_PORT }} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo MONGODB_USER=${{ secrets.MONGODB_USER }} >> .env
          echo MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }} >> .env
          echo VK_CLIENT_ID=${{ secrets.VK_CLIENT_ID }} >> .env
          echo VK_CLIENT_SECRET=${{ secrets.VK_CLIENT_SECRET }} >> .env
          echo GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} >> .env
          echo GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} >> .env
          echo SALT=${{ secrets.SALT }} >> .env
          echo SIGNING_KEY=${{ secrets.SIGNING_KEY }} >> .env
          echo NAME_COOKIE_REFRESH=${{ secrets.NAME_COOKIE_REFRESH }} >> .env
          cat .env
      - name: Extract Version
        id: version_step
        run: |
          echo "##[set-output name=version;]VERSION=${GITHUB_REF#$"refs/tags/v"}"
          echo "##[set-output name=version_tag;]$GITHUB_REPOSITORY:${GITHUB_REF#$"refs/tags/v"}"
          echo "##[set-output name=latest_tag;]$GITHUB_REPOSITORY:latest"
      - name: Print Version
        run: |
          echo ${{steps.version_step.outputs.version_tag}}
          echo ${{steps.version_step.outputs.latest_tag}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: mikalai2006/swapland-api

      - name: PrepareReg Names
        id: read-docker-image-identifiers
        run: |
          echo VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo LASTEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag  }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: |
            ${{env.VERSION_TAG}}
            ${{env.LASTEST_TAG}}
          build-args: |
            ${{steps.version_step.outputs.version}}
          labels: ${{ steps.meta.outputs.labels }}
